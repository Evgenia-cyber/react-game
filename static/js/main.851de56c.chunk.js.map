{"version":3,"sources":["components/Settings.module.css","components/GameField.module.css","components/Scores.module.css","components/Modal.module.css","components/ScoresStatistics.module.css","components/Volume.module.css","pages/Game.module.css","constants.js","utils/sound.js","utils/functions.js","assets/sounds/move.mp3","assets/img/github.svg","assets/img/rs_school_js.svg","assets/img/apple.svg","assets/img/award.svg","components/Scores.jsx","assets/img/score.svg","components/ScoresStatistics.jsx","assets/img/settings.svg","assets/img/close.svg","components/Settings.jsx","components/Modal.jsx","assets/sounds/dead.mp3","assets/sounds/eat.mp3","assets/img/sound.svg","assets/img/no_sound.svg","components/Volume.jsx","components/GameField.jsx","pages/Game.jsx","App.js","index.js"],"names":["module","exports","STEP","SPEED","APPLE","left","top","SNAKE_HEAD","SNAKE_BODY","UP_DIRECTION","DOWN_DIRECTION","LEFT_DIRECTION","RIGHT_DIRECTION","CURRENT_DIRECTION","ALL_SCORES","Array","from","sound","audio","playSound","path","volume","Audio","this","onended","pause","promise","play","catch","e","changeDirection","direction","setDirection","isUp","isDown","isLeft","isRight","Scores","score","bestScore","className","classes","toolbar_item","score_img","src","appleImg","alt","bestscore_img","awardImg","ScoresStatistics","React","useState","isModalOpen","setIsModalOpen","updatedScores","setUpdatedScores","useEffect","window","localStorage","getItem","SCORES","JSON","parse","handlerOnMouseEvent","advanced_item","advanced_img","scoresImg","onMouseEnter","onMouseLeave","scores","length","map","index","scores_item","Settings","setVolume","setCustomVolume","customSettings","setCustomSettings","handlerOnChange","event","target","name","value","prevState","handlerOnChangeFieldSize","settingsImg","settings","close_img","closeImg","onClick","field_control","settings_item","type","max","min","widthInCells","onChange","heightInCells","speed_control","container","checked","speed","checkmark","color_control","color","volume_control","htmlFor","id","step","moveSound","Modal","handleOnPlayBtnClick","isGameEnd","setBestScore","allScores","setAllScores","storageScores","sort","a","b","pop","setItem","stringify","modal","active","play_btn","advanced","author","social","href","githubImg","rs_school","schoolImg","title","Volume","customVolume","noVolumeImg","volumeImg","GameField","snakeHead","setSnakeHead","snakeBodyItems","setSnakeBodyItems","apple","setApple","setScore","isFirstStart","setIsGameEnd","fieldRef","style","field","width","height","field_width","field_height","getRandom","Math","floor","random","createApple","newApple","snake","unshift","some","item","checkIsAppleCreatedInSnakeBody","interval","setInterval","deadSound","clearInterval","newSnakeBody","eatSound","colorClass","green","blue","red","ref","role","tabIndex","onKeyDown","keyCode","handlerOnKeyDown","toolbar","right","close","game_field","game_item","snake_head","snake_body","Game","useRef","setIsFirstStart","x","y","touchStart","setTouchStart","FIELD_WIDTH","FIELD_HEIGHT","wrapper","onTouchStart","changedTouches","clientX","clientY","onTouchEnd","dif","isVerticalMove","abs","current","focus","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,cAAgB,gCAAgC,aAAe,+BAA+B,SAAW,2BAA2B,cAAgB,gCAAgC,cAAgB,gCAAgC,UAAY,4BAA4B,UAAY,8B,iBCAlVD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,MAAQ,yBAAyB,aAAe,gCAAgC,MAAQ,yBAAyB,WAAa,8BAA8B,UAAY,6BAA6B,WAAa,8BAA8B,WAAa,8BAA8B,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,wBAAwB,IAAM,yB,gBCAleD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,aAAe,6BAA6B,UAAY,0BAA0B,cAAgB,8BAA8B,MAAQ,wB,gBCAtLD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,SAAW,wBAAwB,SAAW,wBAAwB,OAAS,sBAAsB,UAAY,2B,mBCA/LD,EAAOC,QAAU,CAAC,cAAgB,wCAAwC,aAAe,uCAAuC,OAAS,iCAAiC,YAAc,wC,mBCAxLD,EAAOC,QAAU,CAAC,OAAS,yB,iBCA3BD,EAAOC,QAAU,CAAC,QAAU,wB,iICCtBC,EAAO,GACPC,EAAQ,IACRC,EAAQ,CAAEC,KAAM,IAAKC,IAAK,KAC1BC,EAAa,CAAEF,KAAM,GAAIC,IAAK,KAC9BE,EAAa,CACjB,CAAEH,KAAM,GAAIC,IAAK,KACjB,CAAED,KAAM,GAAIC,IAAK,MAQbG,EAAe,CAAEJ,KAAM,EAAGC,KAAK,IAC/BI,EAAiB,CAAEL,KAAM,EAAGC,IAAKJ,GACjCS,EAAiB,CAAEN,MAAM,GAAOC,IAAK,GACrCM,EAAkB,CAAEP,KAAMH,EAAMI,IAAK,GACrCO,EAAoBD,EAGpBE,EAAaC,MAAMC,KAAKD,MADA,KAC8B,kBAAM,KCvBrDE,EAAQ,CACnBC,MAAO,KACPC,UAFmB,SAETC,EAAMC,GACd,IAAIH,EAAQ,IAAII,MAAMF,GACtBF,EAAMG,OAASA,EACXE,KAAKL,OAAOA,EAAMM,SACpBD,KAAKL,MAAMO,QAEb,IAAMC,EAAUR,EAAMS,OACtBJ,KAAKL,MAAQA,EACbQ,EAAQE,OAAM,SAACC,SCRbC,EAAkB,SACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEID,EACEJ,IAAcnB,GAChBoB,EAAarB,GAENuB,EACLH,IAActB,GAChBuB,EAAatB,GAENuB,EACLF,IAAcrB,GAChBsB,EAAavB,GAEN2B,GACLL,IAAcpB,GAChBqB,EAAapB,ICxBJ,MAA0B,iC,OCA1B,MAA0B,mCCA1B,MAA0B,yCCA1B,MAA0B,kCCA1B,MAA0B,kC,uBC0B1ByB,EAnBA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACvB,OACE,sBAAKC,UAAWC,IAAQpC,KAAxB,UACE,sBAAKmC,UAAWC,IAAQC,aAAxB,UACE,qBAAKF,UAAWC,IAAQE,UAAWC,IAAKC,EAAUC,IAAI,UACtD,sBAAMN,UAAWC,IAAQH,MAAzB,SAAiCA,OAEnC,sBAAKE,UAAWC,IAAQC,aAAxB,UACE,qBACEF,UAAWC,IAAQM,cACnBH,IAAKI,EACLF,IAAI,eAEN,sBAAMN,UAAWC,IAAQH,MAAzB,SAAiCC,WCpB1B,MAA0B,kC,iBC+C1BU,EAxCU,WAAO,IAAD,EACSC,IAAMC,UAAS,GADxB,mBACtBC,EADsB,KACTC,EADS,OAEaH,IAAMC,SAASrC,GAF5B,mBAEtBwC,EAFsB,KAEPC,EAFO,KAI7BL,IAAMM,WAAU,WACd,GAA8C,OAA1CC,OAAOC,aAAaC,QAAQ,UAAoB,CAClD,IAAMC,EAASC,KAAKC,MAAML,OAAOC,aAAaC,QAAQ,WACtDJ,EAAiBK,MAElB,CAACR,IAEJ,IAAMW,EAAsB,WAC1BV,GAAe,SAACD,GAAD,OAAkBA,MAGnC,OACE,sBAAKZ,UAAWC,IAAQuB,cAAxB,UACE,qBACExB,UAAWC,IAAQwB,aACnBrB,IAAKsB,EACLpB,IAAI,cACJqB,aAAcJ,EACdK,aAAcL,IAEfX,GACC,sBAAKZ,UAAWC,IAAQ4B,OAAxB,UACE,oDACCf,EAAcgB,QACbhB,EAAciB,KAAI,SAACjC,EAAOkC,GAAR,OAChB,sBAA+BhC,UAAWC,IAAQgC,YAAlD,UACE,+BAAOD,EAAQ,IACf,+BAAOlC,MAFCkC,EAAQ,IAAMlC,a,eCpCvB,MAA0B,qCCA1B,MAA0B,kC,gBC6L1BoC,EA5KE,SAAC,GAMX,IALLrD,EAKI,EALJA,OACAsD,EAII,EAJJA,UACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,kBACI,EACkC5B,IAAMC,UAAS,GADjD,mBACGC,EADH,KACgBC,EADhB,KAGE0B,EAAkB,SAACC,GACvB,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAwB,UAAhBF,EAAOC,KAAmBD,EAAOE,OAASF,EAAOE,MAC/DL,GAAkB,SAACM,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCF,EAAOC,QAEtDE,EAA2B,SAACL,GAChC,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KAChBC,GAASF,EAAOE,MACV,iBAAPD,IACEC,EbRwB,GaSzBA,EbTyB,GaUlBA,EbXkB,KaYzBA,EbZyB,KaenB,kBAAPD,IACEC,EbbyB,Gac1BA,Ebd0B,GaenBA,EbhBmB,KaiB1BA,EbjB0B,KaoB9BL,GAAkB,SAACM,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCF,EAAOC,QAGtDpB,EAAsB,WAC1BV,GAAe,SAACD,GAAD,OAAkBA,MAanC,OACE,sBACEZ,UAAWC,IAAQuB,cACnBG,aAAcJ,EACdK,aAAcL,EAHhB,UAKE,qBAAKvB,UAAWC,IAAQwB,aAAcrB,IAAK0C,EAAaxC,IAAI,aAC3DM,GACC,sBAAKZ,UAAWC,IAAQ8C,SAAxB,UACE,qBACE/C,UAAWC,IAAQ+C,UACnB5C,IAAK6C,EACL3C,IAAI,QACJ4C,QAjBkB,WAC1BrC,GAAe,MAkBT,0CAEA,sBAAKb,UAAWC,IAAQkD,cAAgB,IAAMlD,IAAQmD,cAAtD,UACE,2CACA,2CAEE,uBACEC,KAAK,SACLX,KAAK,eACLY,Ib/DiB,GagEjBC,Ib/DiB,GagEjBZ,MAAON,EAAemB,aACtBC,SAAUZ,IARd,WAYA,4CAEE,uBACEQ,KAAK,SACLX,KAAK,gBACLY,IbzEkB,Ga0ElBC,IbzEkB,Ga0ElBZ,MAAON,EAAeqB,cACtBD,SAAUZ,IARd,cAcF,sBAAK7C,UAAWC,IAAQ0D,cAAgB,IAAM1D,IAAQmD,cAAtD,UACE,2CACA,wBAAOpD,UAAWC,IAAQ2D,UAA1B,UACE,uBACEP,KAAK,QACLX,KAAK,QACLC,MAAOhF,EACPkG,QAASxB,EAAeyB,QAAUnG,EAClC8F,SAAUlB,IAEZ,sBAAMvC,UAAWC,IAAQ8D,YAR3B,UAUA,wBAAO/D,UAAWC,IAAQ2D,UAA1B,UACE,uBACEP,KAAK,QACLX,KAAK,QACLC,MbrGEhF,GasGFkG,QbtGElG,KasGO0E,EAAeyB,MACxBL,SAAUlB,IAEZ,sBAAMvC,UAAWC,IAAQ8D,YAR3B,aAYF,sBAAK/D,UAAWC,IAAQ+D,cAAgB,IAAM/D,IAAQmD,cAAtD,UACE,2CACA,wBAAOpD,UAAWC,IAAQ2D,UAA1B,UACE,uBACEP,KAAK,QACLX,KAAK,QACLC,MAAM,QACNkB,QAAkC,UAAzBxB,EAAe4B,MACxBR,SAAUlB,IAEZ,sBAAMvC,UAAWC,IAAQ8D,YAR3B,WAUA,wBAAO/D,UAAWC,IAAQ2D,UAA1B,UACE,uBACEP,KAAK,QACLX,KAAK,QACLC,MAAM,MACNkB,QAAkC,QAAzBxB,EAAe4B,MACxBR,SAAUlB,IAEZ,sBAAMvC,UAAWC,IAAQ8D,YAR3B,SAUA,wBAAO/D,UAAWC,IAAQ2D,UAA1B,UACE,uBACEP,KAAK,QACLX,KAAK,QACLC,MAAM,OACNkB,QAAkC,SAAzBxB,EAAe4B,MACxBR,SAAUlB,IAEZ,sBAAMvC,UAAWC,IAAQ8D,YAR3B,aAYF,sBAAK/D,UAAWC,IAAQiE,eAAiB,IAAMjE,IAAQmD,cAAvD,UACE,uBAAOe,QAAQ,SAAf,qBACA,uBACEd,KAAK,QACLe,GAAG,SACH1B,KAAK,SACLa,IAAI,IACJD,IAAI,IACJe,KAAK,MACL1B,MAAO9D,EACP4E,SA3HkB,SAACjB,GAC7BL,GAAWK,EAAMC,OAAOE,OACxBlE,EAAME,UAAU2F,GAAY9B,EAAMC,OAAOE,OACzCP,GAAiBI,EAAMC,OAAOE,oB,gBCsCnB4B,EAtFD,SAAC,GAWR,IAVLC,EAUI,EAVJA,qBACAC,EASI,EATJA,UACA3E,EAQI,EARJA,MACAC,EAOI,EAPJA,UACA2E,EAMI,EANJA,aACA7F,EAKI,EALJA,OACAsD,EAII,EAJJA,UACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,kBACI,EAC8B5B,IAAMC,SAASrC,GAD7C,mBACGqG,EADH,KACcC,EADd,KAyBJ,OAtBAlE,IAAMM,WAAU,WACd,GAA8C,OAA1CC,OAAOC,aAAaC,QAAQ,UAAoB,CAClD,IAAMC,EAASC,KAAKC,MAAML,OAAOC,aAAaC,QAAQ,WACtDuD,EAAatD,EAAO,IACpBwD,EAAaxD,MAEd,CAACqD,EAAWC,IAEfhE,IAAMM,WAAU,WACd,GAAIyD,EAAW,CACT3E,EAAQC,GACV2E,EAAa5E,GAEf,IAAI+E,EAAa,CAAI/E,GAAJ,mBAAc6E,IAC/BE,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAOA,EAAID,KAEbF,EAAcI,MACdhE,OAAOC,aAAagE,QAAQ,SAAU7D,KAAK8D,UAAUN,OAEtD,CAACF,EAAW5E,EAAW0E,EAAW3E,EAAO4E,IAG1C,sBAAK1E,UAAWC,IAAQmF,MAAQ,IAAMnF,IAAQoF,OAA9C,UACGZ,EAAY,2CAAqB,4CAClC,cAAC,EAAD,CAAQ3E,MAAOA,EAAOC,UAAWA,IACjC,wBAAQC,UAAWC,IAAQqF,SAA3B,SACE,sBAAMpC,QAASsB,EAAf,oBAEF,sBAAKxE,UAAWC,IAAQsF,SAAxB,UACE,cAAC,EAAD,CACE1G,OAAQA,EACRsD,UAAWA,EACXC,gBAAiBA,EACjBC,eAAgBA,EAChBC,kBAAmBA,IAErB,cAAC,EAAD,OAEF,mCACE,yCACU,sBAAMtC,UAAWC,IAAQuF,OAAzB,iCAEV,sBAAKxF,UAAWC,IAAQwF,OAAxB,UACG,IACD,mBAAGC,KAAK,8DAAR,SACE,qBAAKtF,IAAKuF,EAAWrF,IAAI,kBAE3B,mBAAGoF,KAAK,wBAAR,SACE,qBACE1F,UAAWC,IAAQ2F,UACnBxF,IAAKyF,EACLvF,IAAI,wBAIV,gDACgB,IACd,mBAAGoF,KAAK,0BAA0BI,MAAM,UAAxC,qBAEK,IAJP,OAKO,IACL,mBAAGJ,KAAK,4BAA4BI,MAAM,WAA1C,iCAIF,+CC5FO,MAA0B,iCCA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,qC,iBCsB1BC,EAfA,SAAC,GAAyC,IAAvClH,EAAsC,EAAtCA,OAAQsD,EAA8B,EAA9BA,UAAW6D,EAAmB,EAAnBA,aAInC,OACE,qBAAKhG,UAAWC,IAAQpB,OAAS,IAAMoB,IAAQC,aAA/C,SACE,qBACEE,IAAgB,IAAXvB,EAAeoH,EAAcC,EAClC5F,IAAI,SACJ4C,QARiB,WACNf,EAAJ,IAAXtD,EAAyBmH,EAA0B,S,gBC0MxCG,GA7LG,SAAC,GAoBZ,IAnBLC,EAmBI,EAnBJA,UACAC,EAkBI,EAlBJA,aACAC,EAiBI,EAjBJA,eACAC,EAgBI,EAhBJA,kBACAhH,EAeI,EAfJA,UACAC,EAcI,EAdJA,aACAgH,EAaI,EAbJA,MACAC,EAYI,EAZJA,SACA3G,EAWI,EAXJA,MACA4G,EAUI,EAVJA,SACA3G,EASI,EATJA,UACA4G,EAQI,EARJA,aACAX,EAOI,EAPJA,aACAnH,EAMI,EANJA,OACAsD,EAKI,EALJA,UACAsC,EAII,EAJJA,UACAmC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAxE,EACI,EADJA,eAEMyE,EAAQ,CACZC,MAAO,CACLC,MAAM,GAAD,OAAK3E,EAAemB,aAAe9F,EAAnC,MACLuJ,OAAO,GAAD,OAAK5E,EAAeqB,cAAgBhG,EAApC,QAGNwJ,EAAc7E,EAAemB,aAAa9F,EAC1CyJ,EAAe9E,EAAeqB,cAAchG,EAChDgD,IAAMM,WAAU,WACd,IAAMoG,EAAY,SAAC9D,EAAKe,GACtB,OAAOgD,KAAKC,MAAMD,KAAKE,UAAYjE,EAAMe,IAASA,GAU9CmD,EAAc,SAAdA,IACJ,IAAIC,EAAW,CACb5J,KAAMuJ,EAAUF,EAAaxJ,GAC7BI,IAAKsJ,EAAUD,EAAczJ,IAK/B,OAfqC,SAAC+J,GACtC,IAAMC,EAAK,YAAOpB,GAElB,OADAoB,EAAMC,QAAQvB,GACPsB,EAAME,MACX,SAACC,GAAD,OAAUA,EAAKhK,OAAS4J,EAAS5J,MAAQgK,EAAK/J,MAAQ2J,EAAS3J,OAQ7DgK,CAA+BL,KACjCA,EAAWD,KAENC,GAuCHM,EAAWC,aAAY,WA7BzB5B,EAAUvI,KAAO,GACjBuI,EAAUtI,IAAM,GAChBsI,EAAUvI,KAAOqJ,EAAcxJ,GAC/B0I,EAAUtI,IAAMqJ,EAAezJ,GAT1B4I,EAAesB,MACpB,SAACC,GAAD,OAAUA,EAAKhK,OAASuI,EAAUvI,MAAQgK,EAAK/J,MAAQsI,EAAUtI,QAoC5D2G,GACHhG,EAAME,UAAUsJ,EAAWpJ,GAAQ,GAErC+H,GAAa,GACbsB,cAAcH,IAEVpB,IAAiBlC,IA7BvB8B,GAAkB,SAACD,GACjB,IAAI6B,EAAY,YAAO7B,GAGvB,GADEF,EAAUvI,OAAS2I,EAAM3I,MAAQuI,EAAUtI,MAAQ0I,EAAM1I,IACzC,CAChBW,EAAME,UAAUyJ,EAAUvJ,GAC1B6H,EAAS5G,EAAQ,GACjB,IAAM2H,EAAWD,IACjBf,EAASgB,QAETU,EAAalD,MAGf,OADAkD,EAAaR,QAAQvB,GACd+B,KAET9B,GAAa,SAACD,GAAD,MAAgB,CAC3BvI,KAAMuI,EAAUvI,KAAO0B,EAAU1B,KACjCC,IAAKsI,EAAUtI,IAAMyB,EAAUzB,WAgBhCuE,EAAeyB,OAElB,OAAO,kBAAMoE,cAAcH,MAC1B,CAACxI,EAAW6G,EAAWE,EAAgBE,EAAOG,IAEjD,IAeI0B,EACJ,UADgBhG,EAAe4B,MAE3BhE,IAAQqI,MACiB,SAAzBjG,EAAe4B,MACfhE,IAAQsI,KACRtI,IAAQuI,IAEZ,OACE,sBACExI,UAAWC,IAAQ2D,UACnB6E,IAAK5B,EACL6B,KAAK,SACLC,SAAU,EACVC,UAAW,SAACpG,GAAD,OA5BU,SAACA,GACxB,IAAM/C,EpBrHS,KoBqHF+C,EAAMqG,QACbnJ,EpBrHW,KoBqHF8C,EAAMqG,QACflJ,EpBrHW,KoBqHF6C,EAAMqG,QACfjJ,EpBrHY,KoBqHF4C,EAAMqG,SAClBpJ,GAAQC,GAAUC,GAAUC,IAC9BnB,EAAME,UAAU2F,EAAWzF,GAE7BS,EAAgBC,EAAWC,EAAcC,EAAMC,EAAQC,EAAQC,GAoBvCkJ,CAAiBtG,IALzC,UAOE,sBAAKxC,UAAWC,IAAQ8I,QAAxB,UACE,cAAC,EAAD,CAAQjJ,MAAOA,EAAOC,UAAWA,IACjC,sBAAKC,UAAWC,IAAQ+I,MAAxB,UACE,cAAC,EAAD,CACEnK,OAAQA,EACRsD,UAAWA,EACX6D,aAAcA,IAEhB,qBACEhG,UAAWC,IAAQgJ,MAAQ,IAAMhJ,IAAQC,aACzCgD,QA7BkB,WAC1B0D,GAAa,IA0BP,SAIE,qBAAKxG,IAAK6C,EAAU3C,IAAI,kBAK9B,sBAAKwG,MAAOA,EAAMC,MAAO/G,UAAWC,IAAQiJ,WAA5C,UACE,qBACElJ,UAAWC,IAAQuG,MAAQ,IAAMvG,IAAQkJ,UACzCrC,MAAO,CAAEjJ,KAAK,GAAD,OAAK2I,EAAM3I,KAAX,MAAqBC,IAAI,GAAD,OAAK0I,EAAM1I,IAAX,OAFvC,SAIE,qBAAKsC,IAAKC,EAAUC,IAAI,YAE1B,sBAAKN,UAAWC,IAAQyH,MAAxB,UACE,qBACE1H,UACEC,IAAQmJ,WACN,IACAnJ,IAAQkJ,UACR,IAAKd,EAETvB,MAAO,CACLjJ,KAAK,GAAD,OAAKuI,EAAUvI,KAAf,MACJC,IAAI,GAAD,OAAKsI,EAAUtI,IAAf,SAINwI,EAAevE,KAAI,SAAC8F,EAAM7F,GAAP,OAClB,qBAEEhC,UAAWC,IAAQoJ,WAAa,IAAMpJ,IAAQkJ,UAAU,IAAId,EAC5DvB,MAAO,CACLjJ,KAAK,GAAD,OAAKgK,EAAKhK,KAAV,MACJC,IAAI,GAAD,OAAK+J,EAAK/J,IAAV,QAJAkE,EAAQ,GAAK6F,EAAKhK,KAAOgK,EAAK/J,kB,oBCzElCwL,GArGF,WACX,IAAMzC,EAAWnG,IAAM6I,SADN,EAGiB7I,IAAMC,SAAS5C,GAHhC,mBAGVqI,EAHU,KAGCC,EAHD,OAI2B3F,IAAMC,SAAS3C,GAJ1C,mBAIVsI,EAJU,KAIMC,EAJN,OAKiB7F,IAAMC,SAAStC,GALhC,mBAKVkB,EALU,KAKCC,EALD,OAMSkB,IAAMC,SAAS/C,GANxB,mBAMV4I,EANU,KAMHC,EANG,OAOS/F,IAAMC,SAAS,GAPxB,mBAOVb,EAPU,KAOH4G,EAPG,OAQiBhG,IAAMC,SAAS,GARhC,mBAQVZ,EARU,KAQC2E,EARD,OASiBhE,IAAMC,UAAS,GAThC,mBASV8D,EATU,KASCmC,EATD,OAUuBlG,IAAMC,UAAS,GAVtC,mBAUVgG,EAVU,KAUI6C,EAVJ,OAWW9I,IAAMC,SrBTf,IqBFF,mBAWV9B,EAXU,KAWFsD,EAXE,OAYuBzB,IAAMC,SrBV3B,IqBFF,mBAYVqF,EAZU,KAYI5D,EAZJ,OAamB1B,IAAMC,SAAS,CAAE8I,EAAG,EAAGC,EAAG,IAb7C,oBAaVC,GAbU,MAaEC,GAbF,SAc6BlJ,IAAMC,SAAS,CACzD6C,aAAcqG,GACdnG,cAAeoG,GACf7F,MrBdQ,QqBeRH,MAAOnG,IAlBM,qBAcR0E,GAdQ,MAcQC,GAdR,MAqDjB,OACE,gCACE,sBACEtC,UAAWC,KAAQ8J,QACnBC,aAzBsB,SAACxH,GAC3B/D,EAAME,UAAU2F,EAAWzF,GAC3B+K,GAAc,CACZH,EAAGjH,EAAMyH,eAAe,GAAGC,QAC3BR,EAAGlH,EAAMyH,eAAe,GAAGE,WAsBzBC,WAlBoB,SAAC5H,GACzB,IAAM6H,EAAM,CACVZ,EAAGjH,EAAMyH,eAAe,GAAGC,QAAUP,GAAWF,EAChDC,EAAGlH,EAAMyH,eAAe,GAAGE,QAAUR,GAAWD,GAE5CY,EAAiBjD,KAAKkD,IAAIF,EAAIZ,GAAKpC,KAAKkD,IAAIF,EAAIX,GAKtDpK,EAAgBC,EAAWC,EAJd8K,GAAkBD,EAAIX,EAAI,EACxBY,GAAkBD,EAAIX,EAAI,GACzBY,GAAkBD,EAAIZ,EAAI,GACzBa,GAAkBD,EAAIZ,EAAI,IAMzC,UAKE,4CACA,cAAC,GAAD,CACErD,UAAWA,EACXC,aAAcA,EACdC,eAAgBA,EAChBC,kBAAmBA,EACnBhH,UAAWA,EACXC,aAAcA,EACdgH,MAAOA,EACPC,SAAUA,EACV3G,MAAOA,EACP4G,SAAUA,EACV3G,UAAWA,EACX4G,aAAcA,EACdX,aAAcA,EACdnH,OAAQA,EACRsD,UAAWA,EACXsC,UAAWA,EACXmC,aAAcA,EACdC,SAAUA,EACVxE,eAAgBA,QAInBoC,IAAckC,GACb,cAAC,EAAD,CACE9H,OAAQA,EACRsD,UAAWA,EACXqC,qBAnEqB,WAC3BqC,EAAS2D,QAAQC,QACjBpE,EAAatI,GACbwI,EAAkBvI,GAClByI,EAAS7I,GACT4B,EAAanB,GACbuI,GAAa,GACb4C,GAAgB,GAChB9C,EAAS,IA4DHjC,UAAWA,EACX3E,MAAOA,EACPC,UAAWA,EACX2E,aAAcA,EACdtC,gBAAiBA,EACjBC,eAAgBA,GAAgBC,kBAAmBA,SC1G9CoI,I,MALH,WACV,OAAO,cAAC,GAAD,MCDTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.851de56c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"close_img\":\"Settings_close_img__3tr9d\",\"advanced_item\":\"Settings_advanced_item__1cVo5\",\"advanced_img\":\"Settings_advanced_img__2dVxL\",\"settings\":\"Settings_settings__290wI\",\"settings_item\":\"Settings_settings_item__25waC\",\"field_control\":\"Settings_field_control__CD6uG\",\"container\":\"Settings_container__25MLD\",\"checkmark\":\"Settings_checkmark__2USlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameField_container__24kf_\",\"toolbar\":\"GameField_toolbar__2uoIP\",\"right\":\"GameField_right__3YOP0\",\"toolbar_item\":\"GameField_toolbar_item__l8Gvc\",\"close\":\"GameField_close__3FmTQ\",\"game_field\":\"GameField_game_field__2O2qp\",\"game_item\":\"GameField_game_item__2BMXS\",\"snake_head\":\"GameField_snake_head__jG5IG\",\"snake_body\":\"GameField_snake_body__2ZXb7\",\"apple\":\"GameField_apple__1Nkzc\",\"green\":\"GameField_green__2_-Hi\",\"blue\":\"GameField_blue__1jQwq\",\"red\":\"GameField_red__19-Ai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"Scores_left__2xrMA\",\"toolbar_item\":\"Scores_toolbar_item__2pSj7\",\"score_img\":\"Scores_score_img__5DA3O\",\"bestscore_img\":\"Scores_bestscore_img__1CpBb\",\"score\":\"Scores_score__1yczW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__JIIjY\",\"active\":\"Modal_active__BMDm7\",\"play_btn\":\"Modal_play_btn__2EMVQ\",\"advanced\":\"Modal_advanced__2aA0h\",\"author\":\"Modal_author__1JXBh\",\"rs_school\":\"Modal_rs_school__3oQuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advanced_item\":\"ScoresStatistics_advanced_item__1JzY8\",\"advanced_img\":\"ScoresStatistics_advanced_img__2foU4\",\"scores\":\"ScoresStatistics_scores__1rsZz\",\"scores_item\":\"ScoresStatistics_scores_item__Q1xgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volume\":\"Volume_volume__dZlV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Game_wrapper__18lHl\"};","const FIELD_WIDTH = 400;\r\nconst FIELD_HEIGHT = 400;\r\nconst STEP = 20;\r\nconst SPEED = 200;\r\nconst APPLE = { left: 280, top: 100 };\r\nconst SNAKE_HEAD = { left: 80, top: 280 };\r\nconst SNAKE_BODY = [\r\n  { left: 60, top: 280 },\r\n  { left: 40, top: 280 },\r\n];\r\n\r\nconst UP_KEYCODE = 38;\r\nconst DOWN_KEYCODE = 40;\r\nconst LEFT_KEYCODE = 37;\r\nconst RIGHT_KEYCODE = 39;\r\n\r\nconst UP_DIRECTION = { left: 0, top: -STEP };\r\nconst DOWN_DIRECTION = { left: 0, top: STEP };\r\nconst LEFT_DIRECTION = { left: -STEP, top: 0 };\r\nconst RIGHT_DIRECTION = { left: STEP, top: 0 };\r\nconst CURRENT_DIRECTION = RIGHT_DIRECTION;\r\n\r\nconst QUANTITY_BEST_RESULTS = 10;\r\nconst ALL_SCORES = Array.from(Array(QUANTITY_BEST_RESULTS), () => 0);\r\n\r\nconst START_VOLUME = 0.5;\r\nconst COLOR = 'green';\r\nconst MAX_SPEED = SPEED - 150;\r\nconst FIELD_WIDTH_MAX_IN_CELLS = 60;\r\nconst FIELD_WIDTH_MIN_IN_CELLS = 15;\r\nconst FIELD_HEIGHT_MAX_IN_CELLS = 25;\r\nconst FIELD_HEIGHT_MIN_IN_CELLS = 15;\r\n\r\nexport {\r\n  FIELD_WIDTH,\r\n  FIELD_HEIGHT,\r\n  STEP,\r\n  APPLE,\r\n  SNAKE_HEAD,\r\n  SNAKE_BODY,\r\n  SPEED,\r\n  CURRENT_DIRECTION,\r\n  UP_KEYCODE,\r\n  DOWN_KEYCODE,\r\n  LEFT_KEYCODE,\r\n  RIGHT_KEYCODE,\r\n  UP_DIRECTION,\r\n  DOWN_DIRECTION,\r\n  LEFT_DIRECTION,\r\n  RIGHT_DIRECTION,\r\n  ALL_SCORES,\r\n  START_VOLUME,\r\n  COLOR,\r\n  MAX_SPEED,\r\n  FIELD_WIDTH_MAX_IN_CELLS,\r\n  FIELD_HEIGHT_MAX_IN_CELLS,\r\n  FIELD_WIDTH_MIN_IN_CELLS,\r\n  FIELD_HEIGHT_MIN_IN_CELLS,\r\n};\r\n","export const sound = {\r\n  audio: null,\r\n  playSound(path, volume) {\r\n    let audio = new Audio(path);\r\n    audio.volume = volume;\r\n    if (this.audio&&audio.onended) {\r\n      this.audio.pause();\r\n    }\r\n    const promise = audio.play();\r\n    this.audio = audio;\r\n    promise.catch((e) => {});\r\n  },\r\n};\r\n","import { DOWN_DIRECTION, LEFT_DIRECTION, RIGHT_DIRECTION, UP_DIRECTION } from \"../constants\";\r\n\r\nconst changeDirection = (\r\n  direction,\r\n  setDirection,\r\n  isUp,\r\n  isDown,\r\n  isLeft,\r\n  isRight,\r\n) => {\r\n  if (isLeft) {\r\n    if (direction !== RIGHT_DIRECTION) {\r\n      setDirection(LEFT_DIRECTION);\r\n    }\r\n  } else if (isDown) {\r\n    if (direction !== UP_DIRECTION) {\r\n      setDirection(DOWN_DIRECTION);\r\n    }\r\n  } else if (isUp) {\r\n    if (direction !== DOWN_DIRECTION) {\r\n      setDirection(UP_DIRECTION);\r\n    }\r\n  } else if (isRight) {\r\n    if (direction !== LEFT_DIRECTION) {\r\n      setDirection(RIGHT_DIRECTION);\r\n    }\r\n  }\r\n};\r\nexport { changeDirection };\r\n","export default __webpack_public_path__ + \"static/media/move.46666ef6.mp3\";","export default __webpack_public_path__ + \"static/media/github.3a5ccf39.svg\";","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","export default __webpack_public_path__ + \"static/media/apple.f25fbd1c.svg\";","export default __webpack_public_path__ + \"static/media/award.f5001e76.svg\";","import React from 'react';\r\n\r\nimport appleImg from '../assets/img/apple.svg';\r\nimport awardImg from '../assets/img/award.svg';\r\n\r\nimport classes from './Scores.module.css';\r\n\r\nconst Scores = ({ score, bestScore }) => {\r\n  return (\r\n    <div className={classes.left}>\r\n      <div className={classes.toolbar_item}>\r\n        <img className={classes.score_img} src={appleImg} alt=\"score\" />\r\n        <span className={classes.score}>{score}</span>\r\n      </div>\r\n      <div className={classes.toolbar_item}>\r\n        <img\r\n          className={classes.bestscore_img}\r\n          src={awardImg}\r\n          alt=\"best score\"\r\n        />\r\n        <span className={classes.score}>{bestScore}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scores;\r\n","export default __webpack_public_path__ + \"static/media/score.61754360.svg\";","import React from 'react';\r\n\r\nimport { ALL_SCORES } from '../constants';\r\nimport scoresImg from '../assets/img/score.svg';\r\n\r\nimport classes from './ScoresStatistics.module.css';\r\n\r\nconst ScoresStatistics = () => {\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [updatedScores, setUpdatedScores] = React.useState(ALL_SCORES);\r\n\r\n  React.useEffect(() => {\r\n    if (window.localStorage.getItem('scores') !== null) {\r\n      const SCORES = JSON.parse(window.localStorage.getItem('scores'));\r\n      setUpdatedScores(SCORES);\r\n    }\r\n  }, [isModalOpen]);\r\n\r\n  const handlerOnMouseEvent = () => {\r\n    setIsModalOpen((isModalOpen) => !isModalOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.advanced_item}>\r\n      <img\r\n        className={classes.advanced_img}\r\n        src={scoresImg}\r\n        alt=\"best scores\"\r\n        onMouseEnter={handlerOnMouseEvent}\r\n        onMouseLeave={handlerOnMouseEvent}\r\n      />\r\n      {isModalOpen && (\r\n        <div className={classes.scores}>\r\n          <h5>YOUR TOP 10 SCORES</h5>\r\n          {updatedScores.length &&\r\n            updatedScores.map((score, index) => (\r\n              <div key={index + ' ' + score} className={classes.scores_item}>\r\n                <span>{index + 1}</span>\r\n                <span>{score}</span>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoresStatistics;\r\n","export default __webpack_public_path__ + \"static/media/settings.9066db49.svg\";","export default __webpack_public_path__ + \"static/media/close.7e2a977d.svg\";","import React from 'react';\r\n\r\nimport {\r\n  FIELD_HEIGHT_MAX_IN_CELLS,\r\n  FIELD_HEIGHT_MIN_IN_CELLS,\r\n  FIELD_WIDTH_MAX_IN_CELLS,\r\n  FIELD_WIDTH_MIN_IN_CELLS,\r\n  MAX_SPEED,\r\n  SPEED,\r\n} from '../constants';\r\nimport { sound } from '../utils/sound';\r\nimport settingsImg from '../assets/img/settings.svg';\r\nimport closeImg from '../assets/img/close.svg';\r\nimport moveSound from '../assets/sounds/move.mp3';\r\n\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = ({\r\n  volume,\r\n  setVolume,\r\n  setCustomVolume,\r\n  customSettings,\r\n  setCustomSettings,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n\r\n  const handlerOnChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.name === 'color' ? target.value : +target.value;\r\n    setCustomSettings((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n  const handlerOnChangeFieldSize = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    let value = +target.value;\r\n    if(name===\"widthInCells\"){\r\n      if(value<FIELD_WIDTH_MIN_IN_CELLS){\r\n        value=FIELD_WIDTH_MIN_IN_CELLS\r\n      }else if(value>FIELD_WIDTH_MAX_IN_CELLS){\r\n        value=FIELD_WIDTH_MAX_IN_CELLS\r\n      }\r\n    }\r\n    if(name===\"heightInCells\"){\r\n      if(value<FIELD_HEIGHT_MIN_IN_CELLS){\r\n        value=FIELD_HEIGHT_MIN_IN_CELLS\r\n      }else if(value>FIELD_HEIGHT_MAX_IN_CELLS){\r\n        value=FIELD_HEIGHT_MAX_IN_CELLS\r\n      }\r\n    }\r\n    setCustomSettings((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handlerOnMouseEvent = () => {\r\n    setIsModalOpen((isModalOpen) => !isModalOpen);\r\n  };\r\n\r\n  const handlerOnChangeVolume = (event) => {\r\n    setVolume(+event.target.value);\r\n    sound.playSound(moveSound, +event.target.value);\r\n    setCustomVolume(+event.target.value);\r\n  };\r\n\r\n  const handlerOnCloseClick = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classes.advanced_item}\r\n      onMouseEnter={handlerOnMouseEvent}\r\n      onMouseLeave={handlerOnMouseEvent}\r\n    >\r\n      <img className={classes.advanced_img} src={settingsImg} alt=\"settings\" />\r\n      {isModalOpen && (\r\n        <div className={classes.settings}>\r\n          <img\r\n            className={classes.close_img}\r\n            src={closeImg}\r\n            alt=\"close\"\r\n            onClick={handlerOnCloseClick}\r\n          />\r\n          <h5>SETTINGS</h5>\r\n\r\n          <div className={classes.field_control + ' ' + classes.settings_item}>\r\n            <label>FIELD:</label>\r\n            <label>\r\n              width:\r\n              <input\r\n                type=\"number\"\r\n                name=\"widthInCells\"\r\n                max={FIELD_WIDTH_MAX_IN_CELLS}\r\n                min={FIELD_WIDTH_MIN_IN_CELLS}\r\n                value={customSettings.widthInCells}\r\n                onChange={handlerOnChangeFieldSize}\r\n              />\r\n              cells\r\n            </label>\r\n            <label>\r\n              height:\r\n              <input\r\n                type=\"number\"\r\n                name=\"heightInCells\"\r\n                max={FIELD_HEIGHT_MAX_IN_CELLS}\r\n                min={FIELD_HEIGHT_MIN_IN_CELLS}\r\n                value={customSettings.heightInCells}\r\n                onChange={handlerOnChangeFieldSize}\r\n              />\r\n              cells\r\n            </label>\r\n          </div>\r\n\r\n          <div className={classes.speed_control + ' ' + classes.settings_item}>\r\n            <label>SPEED:</label>\r\n            <label className={classes.container}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"speed\"\r\n                value={SPEED}\r\n                checked={customSettings.speed === SPEED}\r\n                onChange={handlerOnChange}\r\n              />\r\n              <span className={classes.checkmark}></span>slow\r\n            </label>\r\n            <label className={classes.container}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"speed\"\r\n                value={MAX_SPEED}\r\n                checked={customSettings.speed === MAX_SPEED}\r\n                onChange={handlerOnChange}\r\n              />\r\n              <span className={classes.checkmark}></span>fast\r\n            </label>\r\n          </div>\r\n\r\n          <div className={classes.color_control + ' ' + classes.settings_item}>\r\n            <label>COLOR:</label>\r\n            <label className={classes.container}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color\"\r\n                value=\"green\"\r\n                checked={customSettings.color === 'green'}\r\n                onChange={handlerOnChange}\r\n              />\r\n              <span className={classes.checkmark}></span>green\r\n            </label>\r\n            <label className={classes.container}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color\"\r\n                value=\"red\"\r\n                checked={customSettings.color === 'red'}\r\n                onChange={handlerOnChange}\r\n              />\r\n              <span className={classes.checkmark}></span>red\r\n            </label>\r\n            <label className={classes.container}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color\"\r\n                value=\"blue\"\r\n                checked={customSettings.color === 'blue'}\r\n                onChange={handlerOnChange}\r\n              />\r\n              <span className={classes.checkmark}></span>blue\r\n            </label>\r\n          </div>\r\n\r\n          <div className={classes.volume_control + ' ' + classes.settings_item}>\r\n            <label htmlFor=\"volume\">VOLUME:</label>\r\n            <input\r\n              type=\"range\"\r\n              id=\"volume\"\r\n              name=\"volume\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              step=\"0.1\"\r\n              value={volume}\r\n              onChange={handlerOnChangeVolume}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nimport { ALL_SCORES } from '../constants';\r\nimport githubImg from '../assets/img/github.svg';\r\nimport schoolImg from '../assets/img/rs_school_js.svg';\r\n\r\nimport Scores from './Scores';\r\nimport ScoresStatistics from './ScoresStatistics';\r\nimport Settings from './Settings';\r\n\r\nimport classes from './Modal.module.css';\r\n\r\nconst Modal = ({\r\n  handleOnPlayBtnClick,\r\n  isGameEnd,\r\n  score,\r\n  bestScore,\r\n  setBestScore,\r\n  volume,\r\n  setVolume,\r\n  setCustomVolume,\r\n  customSettings,\r\n  setCustomSettings,\r\n}) => {\r\n  const [allScores, setAllScores] = React.useState(ALL_SCORES);\r\n\r\n  React.useEffect(() => {\r\n    if (window.localStorage.getItem('scores') !== null) {\r\n      const SCORES = JSON.parse(window.localStorage.getItem('scores'));\r\n      setBestScore(SCORES[0]);\r\n      setAllScores(SCORES);\r\n    }\r\n  }, [isGameEnd, setBestScore]);\r\n\r\n  React.useEffect(() => {\r\n    if (isGameEnd) {\r\n      if (score > bestScore) {\r\n        setBestScore(score);\r\n      }\r\n      let storageScores = [score, ...allScores];\r\n      storageScores.sort((a, b) => {\r\n        return b - a;\r\n      });\r\n      storageScores.pop();\r\n      window.localStorage.setItem('scores', JSON.stringify(storageScores));\r\n    }\r\n  }, [allScores, bestScore, isGameEnd, score, setBestScore]);\r\n\r\n  return (\r\n    <div className={classes.modal + ' ' + classes.active}>\r\n      {isGameEnd ? <h2>GAME OVER</h2> : <h2>START GAME</h2>}\r\n      <Scores score={score} bestScore={bestScore} />\r\n      <button className={classes.play_btn}>\r\n        <span onClick={handleOnPlayBtnClick}>PLAY</span>\r\n      </button>\r\n      <div className={classes.advanced}>\r\n        <Settings\r\n          volume={volume}\r\n          setVolume={setVolume}\r\n          setCustomVolume={setCustomVolume}\r\n          customSettings={customSettings}\r\n          setCustomSettings={setCustomSettings}\r\n        />\r\n        <ScoresStatistics />\r\n      </div>\r\n      <footer>\r\n        <p>\r\n          Author: <span className={classes.author}>Kurineva Evgenia</span>\r\n        </p>\r\n        <div className={classes.social}>\r\n          {' '}\r\n          <a href=\"https://github.com/Evgenia-cyber/react-game/tree/react-game\">\r\n            <img src={githubImg} alt=\"github logo\" />\r\n          </a>\r\n          <a href=\"https://rs.school/js/\">\r\n            <img\r\n              className={classes.rs_school}\r\n              src={schoolImg}\r\n              alt=\"rs_school logo\"\r\n            />\r\n          </a>\r\n        </div>\r\n        <div>\r\n          Icons made by{' '}\r\n          <a href=\"https://www.freepik.com\" title=\"Freepik\">\r\n            Freepik\r\n          </a>{' '}\r\n          from{' '}\r\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n            www.flaticon.com\r\n          </a>\r\n        </div>\r\n        <span>2021</span>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/dead.dd44c1ab.mp3\";","export default __webpack_public_path__ + \"static/media/eat.0ba75cb4.mp3\";","export default __webpack_public_path__ + \"static/media/sound.8309efb1.svg\";","export default __webpack_public_path__ + \"static/media/no_sound.ddaaa467.svg\";","import React from 'react';\r\n\r\nimport volumeImg from '../assets/img/sound.svg';\r\nimport noVolumeImg from '../assets/img/no_sound.svg';\r\n\r\nimport classes from './Volume.module.css';\r\n\r\nconst Volume = ({ volume, setVolume, customVolume }) => {\r\n  const handlerOnClick = () => {\r\n    volume === 0 ? setVolume(customVolume) : setVolume(0);\r\n  };\r\n  return (\r\n    <div className={classes.volume + ' ' + classes.toolbar_item}>\r\n      <img\r\n        src={volume === 0 ? noVolumeImg : volumeImg}\r\n        alt=\"volume\"\r\n        onClick={handlerOnClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Volume;\r\n","import React from 'react';\n\nimport {\n  STEP,\n  UP_KEYCODE,\n  DOWN_KEYCODE,\n  LEFT_KEYCODE,\n  RIGHT_KEYCODE,\n} from '../constants';\nimport { sound } from '../utils/sound';\nimport { changeDirection } from '../utils/functions';\nimport appleImg from '../assets/img/apple.svg';\nimport closeImg from '../assets/img/close.svg';\nimport deadSound from '../assets/sounds/dead.mp3';\nimport eatSound from '../assets/sounds/eat.mp3';\nimport moveSound from '../assets/sounds/move.mp3';\n\nimport Scores from '../components/Scores';\nimport Volume from '../components/Volume';\n\nimport classes from './GameField.module.css';\n\nconst GameField = ({\n  snakeHead,\n  setSnakeHead,\n  snakeBodyItems,\n  setSnakeBodyItems,\n  direction,\n  setDirection,\n  apple,\n  setApple,\n  score,\n  setScore,\n  bestScore,\n  isFirstStart,\n  customVolume,\n  volume,\n  setVolume,\n  isGameEnd,\n  setIsGameEnd,\n  fieldRef,\n  customSettings,\n}) => {\n  const style = {\n    field: {\n      width: `${customSettings.widthInCells * STEP}px`,\n      height: `${customSettings.heightInCells * STEP}px`,\n    },\n  };\nconst field_width = customSettings.widthInCells*STEP;\nconst field_height = customSettings.heightInCells*STEP;\n  React.useEffect(() => {\n    const getRandom = (max, step) => {\n      return Math.floor(Math.random() * (max / step)) * step;\n    };\n\n    const checkIsAppleCreatedInSnakeBody = (newApple) => {\n      const snake = [...snakeBodyItems];\n      snake.unshift(snakeHead);\n      return snake.some(\n        (item) => item.left === newApple.left && item.top === newApple.top,\n      );\n    };\n    const createApple = () => {\n      let newApple = {\n        left: getRandom(field_width, STEP),\n        top: getRandom(field_height, STEP),\n      };\n      if (checkIsAppleCreatedInSnakeBody(newApple)) {\n        newApple = createApple();\n      }\n      return newApple;\n    };\n\n    const checkSelfCollision = () => {\n      return snakeBodyItems.some(\n        (item) => item.left === snakeHead.left && item.top === snakeHead.top,\n      );\n    };\n    const checkCollisionWithBoundaries = () => {\n      return (\n        snakeHead.left < 0 ||\n        snakeHead.top < 0 ||\n        snakeHead.left > field_width - STEP ||\n        snakeHead.top > field_height - STEP\n      );\n    };\n\n    const moveSnake = () => {\n      setSnakeBodyItems((snakeBodyItems) => {\n        let newSnakeBody = [...snakeBodyItems];\n        const isAppleEaten =\n          snakeHead.left === apple.left && snakeHead.top === apple.top;\n        if (isAppleEaten) {\n          sound.playSound(eatSound, volume);\n          setScore(score + 1);\n          const newApple = createApple();\n          setApple(newApple);\n        } else {\n          newSnakeBody.pop();\n        }\n        newSnakeBody.unshift(snakeHead);\n        return newSnakeBody;\n      });\n      setSnakeHead((snakeHead) => ({\n        left: snakeHead.left + direction.left,\n        top: snakeHead.top + direction.top,\n      }));\n    };\n\n    const interval = setInterval(() => {\n      if (checkCollisionWithBoundaries() || checkSelfCollision()) {\n        if (!isGameEnd) {\n          sound.playSound(deadSound, volume, true);\n        }\n        setIsGameEnd(true);\n        clearInterval(interval);\n      } else {\n        if (isFirstStart === isGameEnd) {\n          moveSnake();\n        }\n      }\n    }, customSettings.speed);\n\n    return () => clearInterval(interval);\n  }, [direction, snakeHead, snakeBodyItems, apple, isFirstStart]);\n\n  const handlerOnKeyDown = (event) => {\n    const isUp = event.keyCode === UP_KEYCODE;\n    const isDown = event.keyCode === DOWN_KEYCODE;\n    const isLeft = event.keyCode === LEFT_KEYCODE;\n    const isRight = event.keyCode === RIGHT_KEYCODE;\n    if (isUp || isDown || isLeft || isRight) {\n      sound.playSound(moveSound, volume);\n    }\n    changeDirection(direction, setDirection, isUp, isDown, isLeft, isRight);\n  };\n\n  const handlerOnCloseClick = () => {\n    setIsGameEnd(true);\n  };\n\nconst colorClass= customSettings.color ===\n  'green'\n    ? classes.green\n    : customSettings.color === 'blue'\n    ? classes.blue\n    : classes.red;\n\n  return (\n    <div\n      className={classes.container}\n      ref={fieldRef}\n      role=\"button\"\n      tabIndex={0}\n      onKeyDown={(event) => handlerOnKeyDown(event)}\n    >\n      <div className={classes.toolbar}>\n        <Scores score={score} bestScore={bestScore} />\n        <div className={classes.right}>\n          <Volume\n            volume={volume}\n            setVolume={setVolume}\n            customVolume={customVolume}\n          />\n          <div\n            className={classes.close + ' ' + classes.toolbar_item}\n            onClick={handlerOnCloseClick}\n          >\n            <img src={closeImg} alt=\"close\" />\n          </div>\n        </div>\n      </div>\n\n      <div style={style.field} className={classes.game_field}>\n        <div\n          className={classes.apple + ' ' + classes.game_item}\n          style={{ left: `${apple.left}px`, top: `${apple.top}px` }}\n        >\n          <img src={appleImg} alt=\"apple\" />\n        </div>\n        <div className={classes.snake}>\n          <div\n            className={\n              classes.snake_head +\n                ' ' +\n                classes.game_item +\n                ' ' +colorClass\n            }\n            style={{\n              left: `${snakeHead.left}px`,\n              top: `${snakeHead.top}px`,\n            }}\n          ></div>\n\n          {snakeBodyItems.map((item, index) => (\n            <div\n              key={index + '' + item.left + item.top}\n              className={classes.snake_body + ' ' + classes.game_item+' '+colorClass}\n              style={{\n                left: `${item.left}px`,\n                top: `${item.top}px`,\n              }}\n            ></div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameField;\n","import React from 'react';\n\nimport {\n  SNAKE_HEAD,\n  APPLE,\n  SNAKE_BODY,\n  CURRENT_DIRECTION,\n  START_VOLUME,\n  SPEED,\n  COLOR,\n  FIELD_WIDTH,\n  FIELD_HEIGHT,\n  STEP,\n} from '../constants';\nimport { sound } from '../utils/sound';\nimport { changeDirection } from '../utils/functions';\nimport moveSound from '../assets/sounds/move.mp3';\n\nimport Modal from '../components/Modal';\nimport GameField from '../components/GameField';\n\nimport classes from './Game.module.css';\n\nconst Game = () => {\n  const fieldRef = React.useRef();\n\n  const [snakeHead, setSnakeHead] = React.useState(SNAKE_HEAD);\n  const [snakeBodyItems, setSnakeBodyItems] = React.useState(SNAKE_BODY);\n  const [direction, setDirection] = React.useState(CURRENT_DIRECTION);\n  const [apple, setApple] = React.useState(APPLE);\n  const [score, setScore] = React.useState(0);\n  const [bestScore, setBestScore] = React.useState(0);\n  const [isGameEnd, setIsGameEnd] = React.useState(false);\n  const [isFirstStart, setIsFirstStart] = React.useState(true);\n  const [volume, setVolume] = React.useState(START_VOLUME);\n  const [customVolume, setCustomVolume] = React.useState(START_VOLUME);\n  const [touchStart, setTouchStart] = React.useState({ x: 0, y: 0 });\n    const [customSettings, setCustomSettings] = React.useState({\n      widthInCells: FIELD_WIDTH / STEP,\n      heightInCells: FIELD_HEIGHT / STEP,\n      color: COLOR,\n      speed: SPEED,\n    });\n\n  const handleOnPlayBtnClick = () => {\n    fieldRef.current.focus();\n    setSnakeHead(SNAKE_HEAD);\n    setSnakeBodyItems(SNAKE_BODY);\n    setApple(APPLE);\n    setDirection(CURRENT_DIRECTION);\n    setIsGameEnd(false);\n    setIsFirstStart(false);\n    setScore(0);\n  };\n\n  const handlerOnTouchStart = (event) => {\n    sound.playSound(moveSound, volume);\n    setTouchStart({\n      x: event.changedTouches[0].clientX,\n      y: event.changedTouches[0].clientY,\n    });\n  };\n\n  const handlerOnTouchEnd = (event) => {\n    const dif = {\n      x: event.changedTouches[0].clientX - touchStart.x,\n      y: event.changedTouches[0].clientY - touchStart.y,\n    };\n    const isVerticalMove = Math.abs(dif.x) < Math.abs(dif.y);\n    const isUp = isVerticalMove && dif.y < 0;\n    const isDown = isVerticalMove && dif.y > 0;\n    const isLeft = !isVerticalMove && dif.x < 0;\n    const isRight = !isVerticalMove && dif.x > 0;\n    changeDirection(direction, setDirection, isUp, isDown, isLeft, isRight);\n  };\n\n  return (\n    <div>\n      <div\n        className={classes.wrapper}\n        onTouchStart={handlerOnTouchStart}\n        onTouchEnd={handlerOnTouchEnd}\n      >\n        <h1>SNAKE GAME</h1>\n        <GameField\n          snakeHead={snakeHead}\n          setSnakeHead={setSnakeHead}\n          snakeBodyItems={snakeBodyItems}\n          setSnakeBodyItems={setSnakeBodyItems}\n          direction={direction}\n          setDirection={setDirection}\n          apple={apple}\n          setApple={setApple}\n          score={score}\n          setScore={setScore}\n          bestScore={bestScore}\n          isFirstStart={isFirstStart}\n          customVolume={customVolume}\n          volume={volume}\n          setVolume={setVolume}\n          isGameEnd={isGameEnd}\n          setIsGameEnd={setIsGameEnd}\n          fieldRef={fieldRef}\n          customSettings={customSettings}\n        />\n      </div>\n\n      {isGameEnd !== isFirstStart && (\n        <Modal\n          volume={volume}\n          setVolume={setVolume}\n          handleOnPlayBtnClick={handleOnPlayBtnClick}\n          isGameEnd={isGameEnd}\n          score={score}\n          bestScore={bestScore}\n          setBestScore={setBestScore}\n          setCustomVolume={setCustomVolume}\n          customSettings={customSettings} setCustomSettings={setCustomSettings}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import React from 'react';\n\nimport Game from './pages/Game';\n\nimport './App.css';\n\nconst App = () => {\n  return <Game />;\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}